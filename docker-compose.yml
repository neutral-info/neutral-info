version: "3.2"

services:
  # elasticsearch:
  #   build:
  #     context: elk/elasticsearch/
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   volumes:
  #     - type: bind
  #       source: ./elk/elasticsearch/config/elasticsearch.yml
  #       target: /usr/share/elasticsearch/config/elasticsearch.yml
  #       read_only: true
  #     - type: volume
  #       source: elasticsearch
  #       target: /usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     ES_JAVA_OPTS: "-Xmx512m -Xms512m"
  #     ELASTIC_PASSWORD: changeme
  #     # Use single node discovery in order to disable production mode and avoid bootstrap checks
  #     # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
  #     discovery.type: single-node
  #   networks:
  #     - elk

  # kibana:
  #   build:
  #     context: elk/kibana/
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   volumes:
  #     - type: bind
  #       source: ./elk/kibana/config/kibana.yml
  #       target: /usr/share/kibana/config/kibana.yml
  #       read_only: true
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch

  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:$ELK_VERSION
  #   volumes:
  #     - type: bind
  #       source: ./filebeat/filebeat.yml
  #       target: /usr/share/filebeat/filebeat.yml
  #       read_only: true
  #     - type: volumes
  #       source: ptt
  #       target: /var/log/filebeat/ptt
  #     - type: volumes
  #       source: facebook_group
  #       target: /var/log/filebeat/facebook_group
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch
  #     - kibana

  ptt:
    restart: always
    build:
      context: python/ptt/
    volumes:
      - type: volumes
        source: ptt
        target: /app/data
    networks:
      - neutralinfo
    depends_on:
      - db

  facebook_group:
    build:
      context: python/facebook_group/
    volumes:
      - type: volumes
        source: facebook_group
        target: /app/data
    environment:    
      PYTHONUNBUFFERED: 1
    networks:
      - neutralinfo
    depends_on:
      - db

  facebook_fanpage:
    restart: always
    build:
      context: python/facebook_fanpage/
    environment:    
      PYTHONUNBUFFERED: 1
    networks:
      - neutralinfo
    depends_on:
      - db

  # newscrawler:
  #   restart: always
  #   build:
  #     context: python/newsCrawler/
  #   environment:    
  #     PYTHONUNBUFFERED: 1
  #   networks:
  #     - neutralinfo
  #   depends_on:
  #     - db

  db:
    image: mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_0900_ai_ci --init-connect='SET NAMES UTF8MB4;'  --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: neutralinfo
    ports:
      - 3306:3306
    volumes:
      - ./sqls:/docker-entrypoint-initdb.d
      - mysql:/var/lib/mysql
    networks:
      - neutralinfo

networks:
  neutralinfo:
    driver: bridge

volumes:
  elasticsearch:
  ptt:
  facebook_group:
  mysql:
